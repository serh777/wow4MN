# =============================================================================
# CONFIGURACIÓN DE SEGURIDAD NGINX - WOWSEOWEB3
# =============================================================================
# Archivo de configuración de seguridad para servidores Nginx
# Incluir en el bloque server de nginx.conf

# =============================================================================
# CABECERAS DE SEGURIDAD
# =============================================================================

# Prevenir clickjacking
add_header X-Frame-Options "DENY" always;

# Prevenir MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Habilitar protección XSS
add_header X-XSS-Protection "1; mode=block" always;

# Política de referrer estricta
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Política de permisos restrictiva
add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;

# Content Security Policy
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://www.google-analytics.com; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self';" always;

# Strict Transport Security (HSTS)
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Eliminar información del servidor
server_tokens off;
more_clear_headers Server;
more_clear_headers X-Powered-By;

# =============================================================================
# BLOQUEO DE ARCHIVOS Y DIRECTORIOS SENSIBLES
# =============================================================================

# Bloquear acceso a archivos sensibles
location ~* \.(env|json|md|sql|log|conf|config|bak|backup|old|tmp|temp|ts|tsx|js|jsx)$ {
    deny all;
    return 404;
}

# Bloquear acceso a directorios sensibles
location ~ ^/(\.git|\.env|node_modules|src|config|scripts|prisma|dist|cache|artifacts|contracts|indexer|hooks|services|utils|types|contexts|lib|components)/ {
    deny all;
    return 404;
}

# Bloquear acceso a archivos de configuración específicos
location ~ ^/(package\.json|tsconfig\.json|next\.config\.|tailwind\.config\.|postcss\.config\.|hardhat\.config\.|\.(eslintrc|gitignore)|middleware\.ts|netlify\.toml)$ {
    deny all;
    return 404;
}

# =============================================================================
# PROTECCIÓN CONTRA BOTS MALICIOSOS
# =============================================================================

# Bloquear user agents maliciosos
if ($http_user_agent ~* (ahrefs|semrush|mj12bot|dotbot|blexbot|petalbot|megaindex|ahrefsbot)) {
    return 403;
}

# =============================================================================
# PROTECCIÓN CONTRA ATAQUES COMUNES
# =============================================================================

# Bloquear intentos de inyección SQL y XSS
if ($args ~* (\<|%3C).*script.*(\>|%3E)) {
    return 403;
}

if ($args ~* (\<|%3C).*(iframe|object|embed|marquee|link|meta).*(\>|%3E)) {
    return 403;
}

if ($args ~* (concat|delete|get|select|union|update|insert|drop|create|MD5|benchmark|script|javascript|vbscript)) {
    return 403;
}

if ($args ~* (\.\.|\/\.\.|\.\.\/)) {
    return 403;
}

# =============================================================================
# LIMITACIÓN DE VELOCIDAD
# =============================================================================

# Zona de limitación de velocidad
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

# Aplicar limitaciones
location /api/ {
    limit_req zone=api burst=5 nodelay;
    limit_req_status 429;
}

location /login {
    limit_req zone=login burst=3 nodelay;
    limit_req_status 429;
}

location / {
    limit_req zone=general burst=20 nodelay;
    limit_req_status 429;
}

# =============================================================================
# PROTECCIÓN CONTRA HOTLINKING
# =============================================================================

location ~* \.(jpe?g|png|gif|bmp|svg|webp|ico)$ {
    valid_referers none blocked server_names wowseoweb3.com *.wowseoweb3.com;
    if ($invalid_referer) {
        return 403;
    }
    expires 1M;
    add_header Cache-Control "public, immutable";
}

# =============================================================================
# CONFIGURACIÓN DE CACHE Y COMPRESIÓN
# =============================================================================

# Habilitar compresión gzip
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;

# Cache de archivos estáticos
location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
}

# =============================================================================
# REDIRECCIONES DE SEGURIDAD
# =============================================================================

# Forzar HTTPS
if ($scheme != "https") {
    return 301 https://$host$request_uri;
}

# Redireccionar www a no-www
if ($host ~* ^www\.(.*)) {
    set $host_without_www $1;
    return 301 https://$host_without_www$request_uri;
}

# =============================================================================
# CONFIGURACIÓN DE LOGS DE SEGURIDAD
# =============================================================================

# Formato de log personalizado para seguridad
log_format security '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$request_time $upstream_response_time';

# Log de accesos sospechosos
access_log /var/log/nginx/security.log security;

# =============================================================================
# CONFIGURACIÓN ADICIONAL DE SEGURIDAD
# =============================================================================

# Limitar tamaño de cuerpo de solicitud
client_max_body_size 10M;

# Timeouts de seguridad
client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 15;
send_timeout 10;

# Buffer de seguridad
client_body_buffer_size 1K;
client_header_buffer_size 1k;
client_max_body_size 1k;
large_client_header_buffers 2 1k;

# =============================================================================
# BLOQUEO DE IPS MALICIOSAS (EJEMPLO)
# =============================================================================

# Crear archivo de IPs bloqueadas
# include /etc/nginx/blocked_ips.conf;

# Ejemplo de bloqueo de IP:
# deny 192.168.1.100;
# deny 10.0.0.0/8;

# =============================================================================
# CONFIGURACIÓN PARA NEXT.JS
# =============================================================================

# Proxy para aplicación Next.js
location / {
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_read_timeout 86400;
}

# =============================================================================
# FIN DE CONFIGURACIÓN DE SEGURIDAD NGINX
# =============================================================================